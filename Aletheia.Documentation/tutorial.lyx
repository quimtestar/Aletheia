#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Tutorial for the Aletheia GUI"
\pdf_author "Quim Testar"
\pdf_subject "The Aletheia Proof Assistant is a tool for interactively develop, analyze, store and share mathematical formal proofs. This document is a tutorial for a user quick-start on this system."
\pdf_keywords "proof assistant mathematics aletheia"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Tutorial for the Aletheia GUI
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The Aletheia Proof Assistant is a tool for interactively develop, analyze,
 store and share mathematical formal proofs.
 This document is a tutorial for a user quick-start on this system.
\end_layout

\begin_layout Section
Compiling/obtaining/running the package
\end_layout

\begin_layout Standard
The project sources currently reside at the 
\begin_inset CommandInset href
LatexCommand href
name "GitHub online repository"
target "https://github.com/quimtestar/Aletheia"

\end_inset

, from where you can obtain the sources and compile them yourself or directly
 download the package as a single .jar file.
 
\end_layout

\begin_layout Subsection
Compile the sources
\begin_inset CommandInset label
LatexCommand label
name "sub:Compile-the-sources"

\end_inset


\end_layout

\begin_layout Standard
Requirements:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Java JDK version 8 or greater"
target "http://www.oracle.com/technetwork/java/javase/downloads/index.html"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Apache Ant"
target "http://ant.apache.org/"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Git"
target "https://git-scm.com/"

\end_inset

.
\end_layout

\begin_layout Standard
Steps:
\end_layout

\begin_layout Enumerate
Clone the repository:
\end_layout

\begin_deeper
\begin_layout Standard
Execute the following command in a shell:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

$ git clone https://github.com/quimtestar/Aletheia.git
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The last version of the 
\emph on
Aletheia
\emph default
's project source code will be downloaded under the folder 
\emph on

\begin_inset Quotes eld
\end_inset

Aletheia
\begin_inset Quotes erd
\end_inset


\emph default
 in the current directory.
 The following set of subproject folders will appear:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Base
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.BerkeleyDB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Documentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.GUI
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.GUI.Fonts
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.log4j
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.ParserGenerator
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.PdfExport
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.PeerToPeer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.ProofFinder
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Protocol
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Security
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Utilities
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aletheia.Version
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Compile and build the jar file:
\end_layout

\begin_deeper
\begin_layout Standard
Navigate to the subproject folder 
\emph on
Aletheia.GUI
\emph default
 and execute the following ant command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

$ ant -f build_jar.xml
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It will generate the package file named 
\emph on
aletheiagui.jar
\emph default
 in the current directory.
\end_layout

\end_deeper
\begin_layout Subsection
Obtain the precompiled package
\end_layout

\begin_layout Standard
Alternatively, you can directly download the latest 
\begin_inset CommandInset href
LatexCommand href
name "precompiled package"
target "https://dl.dropboxusercontent.com/u/49511540/Aletheia/aletheiagui.jar"

\end_inset

.
\end_layout

\begin_layout Subsection
Running the package
\end_layout

\begin_layout Standard
Requirements:
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Java JRE version 7 or greater"
target "http://www.oracle.com/technetwork/java/javase/downloads/index.html"

\end_inset

 (included in the JDK if you already downloaded it in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Compile-the-sources"

\end_inset

).
\end_layout

\begin_layout Standard
Run the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

$ java -jar aletheiagui.jar
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After a few instants with a splash image it should appear a window looking
 like this:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap000.png
	scale 50
	clip

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section
Setting up the environment
\end_layout

\begin_layout Subsection
The database directory
\end_layout

\begin_layout Standard
The application data will persist in a embedded database on our local drive
 and first of all we need to set up its path.
 We will do it at the 
\emph on
Persistence folder 
\emph default
field on the 
\emph on
Configuration/Preferences
\emph default
 dialog:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap001.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
If a proper database is not initialized in the specified folder a confirm
 dialog to create it will appear.
 
\end_layout

\begin_layout Subsection
The command line interface.
\end_layout

\begin_layout Standard
After confirming the main window will change to:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap002.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
As we can see, the main window is split in two areas by a movable divider.
 The lower part is a command line interface where we can input commands.
 To obtain a list of available commands grouped by topic, just use the command
 
\emph on
help
\emph default
:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% help 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

(Sub) commands:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	* /authority
\end_layout

\begin_layout Plain Layout

		addda (<UUID> | <nick>) [<statement> [<prefix>]] : Creates a new delegate
 authorizer for the specified or active context.
\end_layout

\begin_layout Plain Layout

		as (<UUID> | <nick>) [<statement>] : Adds a successor for the specified
 or active context.
\end_layout

\begin_layout Plain Layout

		assr <UUID> <statement> : Adds a statement to an existing signature request.
\end_layout

\begin_layout Plain Layout

(...)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Importing initial data from the P2P network
\end_layout

\begin_layout Standard
For executing the further steps of this tutorial we'll need a catalog of
 preexisting theorems already defined and proved in the system.
 We can obtain the in two ways:
\end_layout

\begin_layout Enumerate
Connecting to another installation where they reside via the P2P network
 (quite complicated, but useful in general).
\end_layout

\begin_layout Enumerate
Just importing them from a file (pretty simple, but useful only for this
 tutorial).
 To do so, just jump to 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Importing-data-from"

\end_inset

.
\end_layout

\begin_layout Standard
The catalog we will be working on named 
\emph on

\begin_inset Quotes eld
\end_inset

ctx.quimtestar
\begin_inset Quotes erd
\end_inset


\emph default
 is just one of the many possible that can be defined on the system and
 is aimed to formalize standard mathematics with classical logic and the
 ZFC axioms (Zermelo-Fraenkel set theory with the axiom of choice).
\end_layout

\begin_layout Subsubsection
Connecting to the network
\end_layout

\begin_layout Standard
We can set up our P2P node in two distinct ways: as a 
\emph on

\begin_inset Quotes eld
\end_inset

female
\begin_inset Quotes erd
\end_inset


\emph default
 node or as a 
\emph on

\begin_inset Quotes eld
\end_inset

male
\begin_inset Quotes erd
\end_inset


\emph default
 node.
 The recommended way is being a 
\emph on

\begin_inset Quotes eld
\end_inset

female
\begin_inset Quotes erd
\end_inset


\emph default
 node, but in this case we'll need to keep a TCP port open to the Internet
 and be accepting connections from the outside, which is not always possible.
 As a 
\emph on

\begin_inset Quotes eld
\end_inset

male
\begin_inset Quotes erd
\end_inset

 
\emph default
node, we will just connect to a single node that is willing to accept connection
s and all the communication with the network will be done through it.
\end_layout

\begin_layout Subsubsection
Setting up as a female node
\end_layout

\begin_layout Standard
We set up the net interface's external IP address and the TCP listen port
 in the 
\emph on
Configuration/Preferences
\emph default
 dialog:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap004.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
After that we need to specify an initial node (we might use 
\emph on
aletheia.project.li:9000
\emph default
) via the command line interface:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% help fnj 
\end_layout

\begin_layout Plain Layout

fnj <host> <port>
\end_layout

\begin_layout Plain Layout

Join the female P2P node the network by the given hook.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% fnj aletheia.project.li 9000
\end_layout

\begin_layout Plain Layout

Joined to network
\end_layout

\begin_layout Plain Layout

% connections 
\end_layout

\begin_layout Plain Layout

aletheia.project.li/1.2.3.4:9000	MALE	Network
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Setting up as a male node
\end_layout

\begin_layout Standard
We set up directly the IP address and port of the node we are connecting
 to (we might use 
\emph on
aletheia.project.li:8900
\emph default
) in the 
\emph on
Configuration/Preferences
\emph default
 dialog:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap005.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
We might check the connection is done via the CLI command 
\emph on
connections
\emph default
:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% connections
\end_layout

\begin_layout Plain Layout

aletheia.project.li/1.2.3.4:8900	MALE	Conjugal
\end_layout

\begin_layout Plain Layout

aletheia.project.li/1.2.3.4:8900	MALE	Network
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Obtaining and subscribing to contexts
\end_layout

\begin_layout Standard
We obtain the initial root context executing the 
\emph on
orc
\emph default
 (obtain root context) command with a specific UUID that globally identifies
 the one we will use:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% orc 57dff486-97eb-5733-aad5-a462018f4dde
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After a while a small tree like this should appear in the upper part of
 the window:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap006.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
All the mathematical objects stored in the system (axioms, theorems, definitions
, proof steps,...) are nodes in that tree.
 Except for the root context node, which we have just seen how to obtain
 it, we will be kept updated of the nodes we want to via a 
\emph on
subscription
\emph default
 mechanism.
 We might subscribe for the statements in the root contexts with the next
 command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% subscribe ctx.quimtestar statements
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A white flag indicator will appear left to the root node name and, after
 a while, their statement sub-nodes will be downloaded:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap007.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The (non-assumption) nodes with the same prefix get grouped under a grouping
 node which is labeled in blue with the prefix and with an arrow as indicator.
 The rest of its characteristics when collapsed are inherited from the actual
 node with that prefix as name (if exists).
 We can now expand nodes and navigate to some theorem statement under this
 context:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap008.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The statement 
\family typewriter

\begin_inset Quotes eld
\end_inset

Prop.And.th.symm
\begin_inset Quotes erd
\end_inset


\family default
 is a theorem that states that the logical conjunction is symmetric as a
 proposition (i.e.
 
\begin_inset Formula $\forall P,Q\,:\, P\wedge Q\rightarrow Q\wedge P$
\end_inset

).
 This is might expressed in the Aletheia language with the expression term
 
\family typewriter

\begin_inset Quotes eld
\end_inset

<P:Prop -> <Q:Prop -> <_:Prop.And P Q -> Prop.And Q P>>>
\begin_inset Quotes erd
\end_inset


\family default
, which we find at the node text after the colon mark (function parameter
 names aside).
 
\end_layout

\begin_layout Standard
The red question mark at the left indicates that we can't check the validity
 of this statement, in this case because we are lacking of the proof of
 this theorem (proofs are not downloaded by default).
 The proof of this theorem will take the form as a collection of nodes descendin
g for this one.
 To obtain them them we need to 
\emph on
subscribe
\emph default
 for the proof of this statement.
 
\end_layout

\begin_layout Standard
To do that, first of all we set the 
\emph on
active context 
\emph default
to the parent context of this one, in this case the root context labeled
 as 
\family typewriter

\begin_inset Quotes eld
\end_inset

ctx.quimtestar
\begin_inset Quotes erd
\end_inset


\family default
.
 Having selected the node 
\family typewriter

\begin_inset Quotes eld
\end_inset

Prop.And.th.symm
\begin_inset Quotes erd
\end_inset


\family default
 in the context tree we press the F3 key.
 When referring to a name in the command line, the 
\emph on
active context
\emph default
 is used to determine what particular statement we are referring to (different
 contexts might have statements with the same name).
\end_layout

\begin_layout Standard
The current 
\emph on
active context 
\emph default
is indicated in a panel just above the CLI panel, and we might change it
 any time we want:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap009.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Having set the 
\emph on
active context
\emph default
, we execute the following command to subscribe for the statement's proof:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% subscribe Prop.And.th.symm proof
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The proof subscription indicator is a black flag at the left of the node
 label.
 If we are still connected to the P2P network and there exists any network
 node that has this statement proved, we will in a moment obtain the proof
 of this statement, plus the proof of every theorem used in the proof of
 this statement to have the validity of this theorem assured:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap010.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The green check symbol indicates the validity of this statement, and therefore,
 we may consider this theorem proved from now on.
 So now we know that 
\begin_inset Formula $\forall P,Q\; P\wedge Q\rightarrow Q\wedge P$
\end_inset

.
\end_layout

\begin_layout Standard
The axioms in the system are introduced as (nested) 
\emph on
context's assumptions
\emph default
.
 For example, to be able to prove theorems of the classical logic, we somehow
 need an equivalent to the double negation elimination axiom and in this
 context it is introduced as an assumption of the context 
\family typewriter

\begin_inset Quotes eld
\end_inset

ctx.Prop.Not.double.inv
\family default

\begin_inset Quotes erd
\end_inset

.
 All the theorems that make use in their proofs of the double negation eliminati
on must be under that context.
 So, we must subscribe to the statements of this context the same way we
 did before:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% subscribe ctx.Prop.Not.double.inv statements
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After a while we'll obtain the set of statements directly under that context:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap011.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
So now we might subscribe successively to the statements of the full set
 of nested subcontexts, each under the previous one:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="60col%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Context
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.quimtestar
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Root context.
 Define the pure concept of 
\emph on

\begin_inset Quotes eld
\end_inset

proposition
\begin_inset Quotes erd
\end_inset


\emph default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Prop.Not.double.inv
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Context for the classical logic.
 Axiom of double negation elimination.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.one
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Introduces the 
\emph on
one
\emph default
 function that refers to the unique satisfying object of a given property.
 We'll use this to declare new mathematical objects that we can prove its
 existence and uniqueness.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Introduces the pure concept of 
\emph on

\begin_inset Quotes eld
\end_inset

set
\begin_inset Quotes erd
\end_inset


\emph default
 and the 
\emph on

\begin_inset Quotes eld
\end_inset

set membership
\begin_inset Quotes erd
\end_inset


\emph default
 (∈) relation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.extensionality
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of extensionality from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.specification
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom schema of specification from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.pairing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of pairing from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.union
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of union from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.infinity
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of infinity from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.regularity
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of regularity from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.replacement
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom schema of replacement from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.power
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of power set from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ctx.Set.choice
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The axiom of choice from the ZFC framework.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Done that we should have in our local database the statements (not the proofs)
 for a total of approximately 350 declarations and 3,500 theorems.
\end_layout

\begin_layout Subsubsection
Importing data from a file
\begin_inset CommandInset label
LatexCommand label
name "sub:Importing-data-from"

\end_inset


\end_layout

\begin_layout Standard
If we couldn't perform the steps described in the previous subsections due
 to connectivity problems, we can alternatively download a 
\begin_inset CommandInset href
LatexCommand href
name "data file"
target "https://dl.dropboxusercontent.com/u/49511540/Aletheia/tutorial.ale"

\end_inset

 for this tutorial and import it with a command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% import [PATH]tutorial.ale
\end_layout

\end_inset


\end_layout

\begin_layout Section
Proving theorems
\end_layout

\begin_layout Subsection
Adding zero to the left of a natural number
\end_layout

\begin_layout Standard
The next step in this tutorial is proving some stuff by ourselves.
 In this section we'll be dealing with the following quite trivial theorem
 
\begin_inset Formula $\forall x\in\mathbb{N}\,:\,0+x=x$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Defining the context statement
\end_layout

\begin_layout Standard
As said, any theorem in our system will be represented as a statement within
 a context.
 In this case, that context will be 
\family typewriter

\begin_inset Quotes eld
\end_inset

ctx.Set.regularity
\begin_inset Quotes erd
\end_inset


\family default
 since the axioms accessible from there are needed to prove its validity.
 So, first of all, we set the 
\emph on
active context
\emph default
 to it navigating to it and pressing the 
\emph on
F3
\emph default
 key or executing the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout
\align left

% sel /ctx.quimtestar/ctx.Prop.Not.double.inv/ctx.one/ctx.Set/ctx.Set.extensionality/ctx.S
et.specification/ctx.Set.pairing/ctx.Set.union/ctx.Set.infinity/ctx.Set.regularity
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, we'll create the new statement with the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new tutorial.th ctx "<x:Set -> <_:Natural x -> Set.Equal (Natural.sum Natural.zero
 x) x>>"
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter

\begin_inset Quotes eld
\end_inset

new
\begin_inset Quotes erd
\end_inset


\family default
 command is used to create new statements, 
\family typewriter

\begin_inset Quotes eld
\end_inset

tutorial.th
\begin_inset Quotes erd
\end_inset


\family default
 is the arbitrary name we'll use for this statement, 
\family typewriter

\begin_inset Quotes eld
\end_inset

ctx
\begin_inset Quotes erd
\end_inset


\family default
 indicates we want to create a statement of the type 
\emph on
context
\emph default
.
 Finally, we specify a 
\emph on
term expression
\emph default
 that specifies this theorem thesis between quote marks.
\end_layout

\begin_layout Standard
In our environment, every natural number is an object of the type 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set
\begin_inset Quotes erd
\end_inset


\family default
 that satisfies the proposition 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural
\begin_inset Quotes erd
\end_inset


\family default
, so this theorem might be seen as a function that takes a 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set
\begin_inset Quotes erd
\end_inset


\family default
 object that satisfies the 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural
\begin_inset Quotes erd
\end_inset


\family default
 proposition and returns the theorem's equality as a proposition.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap012.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Under our new context we automatically get some assumption nodes corresponding
 to the function parameters of the context term (with types 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set
\begin_inset Quotes erd
\end_inset


\family default
 and 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural x
\begin_inset Quotes erd
\end_inset


\family default
), and a consequent node containing the body term of that function (
\family typewriter

\begin_inset Quotes eld
\end_inset

Set.Equal (Natural.sum Natural.zero x) x
\begin_inset Quotes erd
\end_inset


\family default
).
 To get context marked as valid, and so this theorem proved, our target
 is to infer a valid statement that has exactly that term as a type.
\end_layout

\begin_layout Subsubsection
Naming the assumptions
\end_layout

\begin_layout Standard
First of all, we should set the 
\family typewriter

\begin_inset Quotes eld
\end_inset

[Assumption: 1]
\begin_inset Quotes erd
\end_inset


\family default
\emph on
 
\emph default
statement's name so we can refer to it form the command line.
 We can do it just selecting it in the context tree and pressing F2 or with
 the command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% idas [name] 1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this catalog it has been adopted the practice of naming the proof steps
 statements in proofs simply as 
\family typewriter

\begin_inset Quotes eld
\end_inset

s###
\begin_inset Quotes erd
\end_inset


\family default
, being 
\family typewriter
###
\family default
\emph on
 
\emph default
a three-digit consecutive number sequence for every theorem.
 So in this case the name would be 
\family typewriter

\begin_inset Quotes eld
\end_inset

s000
\begin_inset Quotes erd
\end_inset


\family default
.
\end_layout

\begin_layout Standard
This assumption statement is marked as not valid because it depends on the
 validity of the statement 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural
\begin_inset Quotes erd
\end_inset


\family default
 (as we can notice since it is displayed yellow, and not green, at its occurrenc
e on the type term -right to the colon mark- of this statement; this won't
 happen if we imported the tutorial data from a file).
 To download the proof that makes it valid, we just subscribe for its proof:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% subscribe Natural proof
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If we are still connected to the P2P network it should just turn to valid
 after a while.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap013.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
First proof approach
\end_layout

\begin_layout Standard
Navigating through the catalog of theorems we can easily find one labeled
 as 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.zero.lft
\begin_inset Quotes erd
\end_inset


\family default
 that exactly fits this theorem, so in this first approach we will be just
 using it in a trivial proof.
 That statement corresponds to the term
\family typewriter
 "<@0:Set -> <@1:Natural @0 -> Set.Equal (Natural.sum Natural.zero @0) @0>>"
\family default
 and we already have in our context a statement 
\family typewriter

\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset


\family default
 of type 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set
\begin_inset Quotes erd
\end_inset


\family default
 and a statement 
\family typewriter

\begin_inset Quotes eld
\end_inset

s000
\begin_inset Quotes erd
\end_inset


\family default
\emph on
 
\emph default
of type 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural x
\begin_inset Quotes erd
\end_inset


\family default
\emph on
 
\emph default
to reach a consequent of type 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set.Equal (Natural.sum Natural.zero x) x
\begin_inset Quotes erd
\end_inset


\family default
.
 We can infer a new statement passing any term whose type matches with the
 function's parameter type to another statement.
 That is called a 
\emph on

\begin_inset Quotes eld
\end_inset

specialization statement
\begin_inset Quotes erd
\end_inset


\emph default
.
 So we will specialize the 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.zero.lft
\begin_inset Quotes erd
\end_inset


\family default
 statement with this two assumptions.
 We do it with the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s001 spc Natural.sum.th.zero.lft x
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We have just created a new 
\family typewriter

\begin_inset Quotes eld
\end_inset

s001
\begin_inset Quotes erd
\end_inset


\family default
 statement that is a specialization of the 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.zero.lft
\begin_inset Quotes erd
\end_inset


\family default
 theorem with parameter 
\family typewriter

\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset


\family default
:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap014.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Since this statement's validity depends on the specialized statement's and
 in this moment it's still not valid because we have not got its proof,
 now we should subscribe for its proof to make this new statement valid:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% subscribe Natural.sum.th.zero.lft proof
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To make this theorem valid, and since we just started our database from
 scratch, it will be downloaded and validated not only its proof but the
 proofs of all the theorems on which it depends to the very axioms.
 That can take a while, but we can just carry on with out proving work while
 the system does all this job.
 The only consequence is that we just won't be seeing this statement as
 valid (and consequently be sure that the proof we are building is valid)
 until all that is done.
\end_layout

\begin_layout Standard
Now we have just to specialize statement 
\family typewriter

\begin_inset Quotes eld
\end_inset

s001
\begin_inset Quotes erd
\end_inset


\family default
 with 
\family typewriter

\begin_inset Quotes eld
\end_inset

s000
\begin_inset Quotes erd
\end_inset


\family default
 and we are done:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s002 spc s001 s000
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap015.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Note that the consequent has been satisfied with this statement and our
 new theorem has been marked as proved.
 The list of statements (valid or not) that satisfy a consequent are displayed
 between brackets next to it.
\end_layout

\begin_layout Standard
Now we have a new proved theorem in our catalog and we can use in any proof
 in a context descending to this one.
 Of course, it doesn't make much sense to prove something using the very
 same theorem that has been proved before.
 
\end_layout

\begin_layout Standard
We can delete a statement by selecting its node in the context tree and
 hitting the 
\emph on

\begin_inset Quotes eld
\end_inset

delete
\begin_inset Quotes erd
\end_inset


\emph default
 key.
 If other statements depend on it, we'll need to use the 
\emph on

\begin_inset Quotes eld
\end_inset

shift
\begin_inset Quotes erd
\end_inset


\emph default
 key to delete them in a 
\begin_inset Quotes eld
\end_inset

cascade
\begin_inset Quotes erd
\end_inset

 fashion (use with care).
 Doing this with the statements we have just input, of course, will 
\begin_inset Quotes eld
\end_inset

unprove
\begin_inset Quotes erd
\end_inset

 our theorem (and all theorems whose proof are depending on it).
\end_layout

\begin_layout Standard
To prove it again, we can alternatively do both specializations in a row
 in the same statement:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s001 spc Natural.sum.th.zero.lft x s000
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Both specialization statements are created and named using the specified
 label as a prefix:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap016.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Second proof approach
\end_layout

\begin_layout Standard
We'll now try to prove the same theorem combining other theorems, which
 is the way usual proofs are.
 Navigating through the catalog, we can find find the theorem 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.def.zero
\begin_inset Quotes erd
\end_inset


\family default
 which states that 
\begin_inset Formula $\forall x\in\mathbb{N}\,:\, x+0=x$
\end_inset

 and then 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.comm
\begin_inset Quotes erd
\end_inset

 
\family default
which is the commutative property of the sum operation of naturals: 
\begin_inset Formula $\forall x\in\mathbb{N}\,\forall y\in\mathbb{N}\,:\, x+y=y+x$
\end_inset

.
 Additionally we'll need the transitive property of the equality relation
 to 
\begin_inset Quotes eld
\end_inset

glue
\begin_inset Quotes erd
\end_inset

 one part to the other, that is the 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set.Equal.th.trans
\begin_inset Quotes erd
\end_inset


\family default
 theorem which states that 
\begin_inset Formula $\forall x\forall y\forall z\,:\, x=y\wedge y=z\rightarrow x=z$
\end_inset

.
\end_layout

\begin_layout Standard
So, we enter the steps of this proof as follows and we are done:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s001 spc Natural.sum.th.comm Natural.zero Natural.zero.th.Natural x s000
\end_layout

\begin_layout Plain Layout

% new s002 spc Natural.sum.def.zero x 
\end_layout

\begin_layout Plain Layout

% new s003 spc Set.Equal.th.trans "Natural.sum Natural.zero x" "Natural.sum x
 Natural.zero" x s001 s002 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap017.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Unfortunately, the proof on 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.comm
\begin_inset Quotes erd
\end_inset


\family default
 depends on 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.th.zero.lft
\begin_inset Quotes erd
\end_inset


\family default
, so we really haven't done anything much different than before.
 If we were proving that theorem from scratch, the proof would need to be
 different than this.
\end_layout

\begin_layout Subsubsection
Third and definitive proof approach
\end_layout

\begin_layout Standard
The actual proof of this theorem uses the mathematical induction principle,
 which we have in our system just as another theorem.
 The theorem 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.th.induction
\begin_inset Quotes erd
\end_inset


\family default
 applies to any proposition on naturals and states that 
\begin_inset Formula $\forall P\,:\, P(0)\wedge[\forall n\in\mathbb{N}\,:\, P(n)\rightarrow P(n+1)]\rightarrow\forall n\in\mathbb{N}\,:\, P(n)$
\end_inset

, so we just apply it to the generalized term we are willing to prove 
\family typewriter

\begin_inset Quotes eld
\end_inset

<x:Set -> Set.Equal (Natural.sum Natural.zero x) x>
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s001 spc Natural.th.induction "<x:Set -> Set.Equal (Natural.sum Natural.zero
 x) x>"
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The resulting statement is a function that its antecedents are respectively
 the 
\emph on
basis step
\emph default
 and the 
\emph on
inductive step
\emph default
 of the induction.
 We may now create them as context statements just as they were theorems
 in this level and leave their proof for later:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout
\align left

% new s002 ctx "Set.Equal (Natural.sum Natural.zero Natural.zero) Natural.zero"
\end_layout

\begin_layout Plain Layout
\align left

% up
\end_layout

\begin_layout Plain Layout
\align left

% new s003 spc s001 s002 
\end_layout

\begin_layout Plain Layout
\align left

% new s004 ctx "<x:Set -> <_:Natural x -> <_:Set.Equal (Natural.sum Natural.zero
 x) x -> Set.Equal (Natural.sum Natural.zero (Natural.succ x)) (Natural.succ
 x)>>>"
\end_layout

\begin_layout Plain Layout
\align left

% up
\end_layout

\begin_layout Plain Layout
\align left

% new s005 spc s003 s004
\end_layout

\end_inset


\end_layout

\begin_layout Standard
(When creating a new context that is not immediately proved the active context
 is automatically set to that new context, so we need to set one level up
 with the 
\emph on

\begin_inset Quotes eld
\end_inset

up
\begin_inset Quotes erd
\end_inset


\emph default
 command).
\end_layout

\begin_layout Standard
Alternatively, we can automatically execute this sequence with a single
 command as this:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s002 strip s001
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After that, we apply the resulting statement to 
\family typewriter

\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset


\family default
.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s003 spc s002 x s000 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At this step we reached the context's consequent but we won't get it marked
 as valid until we prove both contexts we left before:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap018.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
So now we set the 
\emph on
active context
\emph default
 to the context 
\family typewriter

\begin_inset Quotes eld
\end_inset

s002.sub_00
\begin_inset Quotes erd
\end_inset

 
\family default
which just states that 
\begin_inset Formula $0+0=0$
\end_inset

 and prove it:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

% new s004 spc Natural.sum.def.zero Natural.zero
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Proving the induction step 
\family typewriter

\begin_inset Quotes eld
\end_inset

s002.sub_02
\begin_inset Quotes erd
\end_inset


\family default
 is a bit more tricky:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,extendedchars=true"
inline false
status open

\begin_layout Plain Layout
\align left

% idas x 0
\end_layout

\begin_layout Plain Layout
\align left

% idas s005 1 
\end_layout

\begin_layout Plain Layout
\align left

% idas s006 2
\end_layout

\begin_layout Plain Layout
\align left

% new s007 spc Natural.sum.def.succ Natural.zero x s005 
\end_layout

\begin_layout Plain Layout
\align left

% new s008 spc Set.Equal.th.trans "Natural.sum Natural.zero (Natural.succ x)"
 "Natural.succ (Natural.sum Natural.zero x)" "Natural.succ x" s007 
\end_layout

\begin_layout Plain Layout
\align left

% new s009 strip s008
\end_layout

\begin_layout Plain Layout
\align left

% new s010 spc Set.th.function Natural.succ "Natural.sum Natural.zero x" x s006
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We used the 
\family typewriter

\begin_inset Quotes eld
\end_inset

Natural.sum.def.succ
\begin_inset Quotes erd
\end_inset

 
\family default
that defines the sum operation to satisfy the property 
\begin_inset Formula $\forall n\in\mathbb{N\,}\forall m\in\mathbb{N\,}:\, n+(m+1)=(n+m)+1$
\end_inset

, the transitive property of equality as before, and then the fact that
 
\begin_inset Formula $\forall f\,\forall x\,\forall y\,:\, x=y\rightarrow f(x)=f(y)$
\end_inset

 which is just another theorem in the catalog named 
\family typewriter

\begin_inset Quotes eld
\end_inset

Set.th.function
\begin_inset Quotes erd
\end_inset


\family default
.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width ""
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/cap019.png
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Epsilon-induction
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "This video on youtube"
target "https://www.youtube.com/watch?v=XXU7GxIRLHI&index=1&list=PLYFNMXa8kbndNcC8WUvA5tlvPNshH9Z6P"

\end_inset

 shows the development of the proof of 
\begin_inset CommandInset href
LatexCommand href
name "the epsilon-induction principle"
target "https://en.wikipedia.org/wiki/Epsilon-induction"

\end_inset

 in set theory.
 That is, 
\begin_inset Formula $\forall P\,:\,[\forall x\,:\,(\forall y\in x\,:\, P(y))\rightarrow P(x)]\rightarrow[\forall x\,:\, P(x)]$
\end_inset

.
 The sketch of this proof is as follows:
\end_layout

\begin_layout Proof
We assume that for a particular property of sets 
\emph on
P
\emph default
 the hypothesis 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall x\,(\forall y\in x\,:\, P(y))\rightarrow P(x)$
\end_inset

 occurs (
\family typewriter
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Quotes eld
\end_inset

s000
\begin_inset Quotes erd
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
).
 First of all we state and proof the reciprocal of that assumption 
\begin_inset Formula $\forall x\,:\,\neg P(x)\rightarrow\exists y\in x\,:\,\neg P(y)$
\end_inset

 (
\family typewriter
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Quotes eld
\end_inset

s001
\begin_inset Quotes erd
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
).
 Our goal is to show that for any particular set 
\begin_inset Formula $x$
\end_inset

, it is the case that 
\begin_inset Formula $P(x)$
\end_inset

.
\end_layout

\begin_layout Proof
Next we will proceed in a 
\emph on
reductio ad absurdum
\emph default
 manner.
 So we will be taking the negation of the consequent 
\begin_inset Formula $\neg P(x)$
\end_inset

 as another assumption (
\family typewriter

\begin_inset Quotes eld
\end_inset

s022
\begin_inset Quotes erd
\end_inset


\family default
) and work towards reaching a contradiction.
\end_layout

\begin_layout Proof
To achieve that, we define recursively a function 
\emph on
f
\emph default
 from the set of natural numbers to the class of sets as follows:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Proof
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Itemize
\begin_inset Formula $f(0)=\{x\}$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

f.def.zero
\begin_inset Quotes erd
\end_inset


\family default
).
\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall n\in\mathbb{N}\,:\, f(n+1)=\{y\in\cup(f(n))\,:\,\neg P(y)\}$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

f.def.succ
\begin_inset Quotes erd
\end_inset


\family default
).
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Proof
The base case is defined through the 
\emph on
axiom of pairing
\emph default
 (in the particular case of a pair of identical elements, a 
\emph on
singleton
\emph default
).
 For the general case we need the 
\emph on
axiom of union
\emph default
 and the 
\emph on
axiom schema of separation
\emph default
.
 
\end_layout

\begin_layout Proof
It is easy to proof that the function 
\emph on
f
\emph default
 will fulfill that 
\begin_inset Formula $\forall n\in\mathbb{N}\,:\,\forall z\in f(n)\,:\,\neg P(z)$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

f.th.Not_P
\begin_inset Quotes erd
\end_inset


\family default
).
 In the video it is used the 
\begin_inset CommandInset href
LatexCommand href
name "principle of mathematical induction"
target "https://en.wikipedia.org/wiki/Mathematical_induction"

\end_inset

 for natural numbers (
\family typewriter

\begin_inset Quotes eld
\end_inset

s027
\begin_inset Quotes erd
\end_inset


\family default
) although in reality it would not be necessary; we would only need the
 fact that a natural number is either zero or the successor of another natural
 number (which is proved by induction anyway).
\end_layout

\begin_layout Proof
There is a theorem in the catalog which is a direct consequence of the axiom
 of regularity that states that 
\begin_inset Formula $\forall x\,:\,[\forall y\in x\,:\,\exists z\in y\cap x]\rightarrow x=\textrm{Ø}$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

Set.th.In.acyclic
\begin_inset Quotes erd
\end_inset


\family default
).
 We'll feed that theorem with the set 
\begin_inset Formula $\cup f(\mathbb{N})$
\end_inset

 (defined using the 
\emph on
axiom of schema replacement
\emph default
) (
\family typewriter

\begin_inset Quotes eld
\end_inset

s045
\begin_inset Quotes erd
\end_inset


\family default
).
 The antecedent of that theorem (
\family typewriter

\begin_inset Quotes eld
\end_inset

s046.sub_00
\begin_inset Quotes erd
\end_inset


\family default
) is proven through the fact that any element 
\emph on
z
\emph default
 of 
\begin_inset Formula $\cup f(\mathbb{N})$
\end_inset

 is an element of 
\begin_inset Formula $f(n)$
\end_inset

 for some 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, which by 
\family typewriter

\begin_inset Quotes eld
\end_inset

f.th.Not_P
\begin_inset Quotes erd
\end_inset


\family default
 implies that 
\begin_inset Formula $\neg P(z)$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

s068
\begin_inset Quotes erd
\end_inset


\family default
).
 That fact in turn implies by 
\family typewriter

\begin_inset Quotes eld
\end_inset

s001
\begin_inset Quotes erd
\end_inset


\family default
 that exists an element 
\emph on
w
\emph default
 of 
\emph on
z
\emph default
 for which 
\begin_inset Formula $\neg P(w)$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

s076
\begin_inset Quotes erd
\end_inset


\family default
).
 By definition, this means that 
\begin_inset Formula $w\in f(n+1)$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

s090
\begin_inset Quotes erd
\end_inset


\family default
), and therefore also to 
\begin_inset Formula $\cup f(\mathbb{N})$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

s099
\begin_inset Quotes erd
\end_inset


\family default
).
\end_layout

\begin_layout Proof
So, to this point we have concluded that 
\begin_inset Formula $\cup f(\mathbb{N})=\textrm{Ø}$
\end_inset

.
 But this contradicts the definition for the base case of 
\emph on
f
\emph default
, since 
\begin_inset Formula $x\in\{x\}=f(0)$
\end_inset

 which leads to 
\begin_inset Formula $x\in\cup f(\mathbb{N})$
\end_inset

 (
\family typewriter

\begin_inset Quotes eld
\end_inset

s103
\begin_inset Quotes erd
\end_inset


\family default
).
\end_layout

\end_body
\end_document
