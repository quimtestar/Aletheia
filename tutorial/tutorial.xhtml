<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.1.2" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Tutorial for the Aletheia GUI</title>
<style type='text/css'>
/* LyX Provided Styles */
table { border: 1px solid black; display: inline-block; }
td { border: 1px solid black; padding: 0.5ex; }

/* Layout-provided Styles */
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
margin-bottom: 2ex;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
ol.enumerate {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.plain_layout {
text-align: left;

}
h4.subsubsection {
font-weight: bold;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.4ex;
text-align: left;

}
div.proof {
font-style: normal;
font-variant: normal;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
text-align: left;

}
span.proof_label {
font-style: italic;
font-variant: normal;
font-size: medium;

}
 div.toc {
   margin: 2em 0em;
   border-style: solid;
   border-width: 2px 0px;
   padding: 1em 0em;
 }
 h2.tochead { font-size: x-large; font-weight: bold; }
 div.lyxtoc-0 {
   margin: 2em 0em 0em 0em;
   font-size: xx-large;
   font-weight: bold;
 }
 div.lyxtoc-1 {
   margin: 1em 0em 0em 0em;
   font-size: x-large;
   font-weight: bold;
 }
 div.lyxtoc-2 {
   margin: 0em 0.1em 0em 1em;
   font-size: large;
   font-weight: normal;
 }
 div.lyxtoc-3 { margin: 0em 0.1em 0em 0.5em; font-size: medium; }
 div.lyxtoc-4 { margin: 0em 0.1em 0em 0.5em; }
 div.lyxtoc-5 { margin: 0em 0.1em 0em 0.5em; }
 div.lyxtoc-6 { margin: 0em 0.1em 0em 0.5em; }
 a.tocentry {
   text-decoration: none;
   color: black;
 }
 a.tocentry:visited { color: black; }
pre.listings {
font-family: monospace;
}
div.Frameless { margin: 1em; }


</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />Tutorial for the Aletheia GUI</h1>

<div class='toc'><h2 class='tochead section'>Table of Contents</h2>


<div class='lyxtoc-1'><div class='lyxtoc-2'><a href='#magicparlabel-3' class='tocentry'>1 Introduction</a>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-5' class='tocentry'>2 Compiling/obtaining/running the package</a>


<div class='lyxtoc-3'><a href='#magicparlabel-7' class='tocentry'>2.1 Compile the sources</a>
</div>

<div class='lyxtoc-3'><a href='#magicparlabel-114' class='tocentry'>2.2 Obtain the precompiled package</a>
</div>

<div class='lyxtoc-3'><a href='#magicparlabel-116' class='tocentry'>2.3 Running the package</a>
</div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-131' class='tocentry'>3 Setting up the environment</a>


<div class='lyxtoc-3'><a href='#magicparlabel-132' class='tocentry'>3.1 The database directory</a>
</div>

<div class='lyxtoc-3'><a href='#magicparlabel-140' class='tocentry'>3.2 The command line interface.</a>
</div>

<div class='lyxtoc-3'><a href='#magicparlabel-162' class='tocentry'>3.3 Importing initial data from the P2P network</a>
</div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-427' class='tocentry'>4 Proving theorems</a>


<div class='lyxtoc-3'><a href='#magicparlabel-428' class='tocentry'>4.1 Adding zero to the left of a natural number</a>
</div>

<div class='lyxtoc-3'><a href='#magicparlabel-594' class='tocentry'>4.2 Epsilon-induction</a>
</div>
</div>
</div>
</div>

<h2 class="section"><a id='magicparlabel-3' /><span class="section_label">1</span> Introduction</h2>
<div class="standard"><a id='magicparlabel-4' />The Aletheia Proof Assistant is a tool for interactively develop, analyze, store and share mathematical formal proofs. This document is a tutorial for a user quick-start on this system.</div>
<h2 class="section"><a id='magicparlabel-5' /><span class="section_label">2</span> Compiling/obtaining/running the package</h2>
<div class="standard"><a id='magicparlabel-6' />The project sources currently reside at the <a href="https://github.com/quimtestar/Aletheia">GitHub online repository</a>, from where you can obtain the sources and compile them yourself or directly download the package as a single .jar file. </div>
<h3 class="subsection"><a id='magicparlabel-7' /><span class="subsection_label">2.1</span> Compile the sources<a id="sub_Compile_the_sources" />
</h3>
<div class="standard"><a id='magicparlabel-8' />Requirements:</div>

<ul class="itemize"><a id='magicparlabel-9' /><li class="itemize_item"><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java JDK version 7 or greater</a>.</li>
<li class="itemize_item"><a href="http://ant.apache.org/">Apache Ant</a>.</li>
<li class="itemize_item"><a href="https://git-scm.com/">Git</a>.</li>
</ul>
<div class="standard"><a id='magicparlabel-12' />Steps:</div>

<ol class="enumerate"><a id='magicparlabel-13' /><li class="enumerate_item">Clone the repository:
<div class="standard"><a id='magicparlabel-14' />Execute the following command in a shell:</div>


<div class='float float-listings'><pre class ='listings'>$ git clone https://github.com/quimtestar/Aletheia.git</pre></div>


<div class="standard"><a id='magicparlabel-20' />The last version of the <em>Aletheia</em>'s project source code will be downloaded under the folder &ldquo;<em>Aletheia&rdquo;</em> in the current directory. The following set of subproject folders will appear:</div>




<div class="standard"><a id='magicparlabel-21' /><table><tbody><tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-63' />Aletheia.Base</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-66' />Aletheia.BerkeleyDB</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-69' />Aletheia.Documentation</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-72' />Aletheia.GUI</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-75' />Aletheia.GUI.Fonts</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-78' />Aletheia.log4j</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-81' />Aletheia.ParserGenerator</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-84' />Aletheia.PdfExport</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-87' />Aletheia.PeerToPeer</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-90' />Aletheia.ProofFinder</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-93' />Aletheia.Protocol</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-96' />Aletheia.Security</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-99' />Aletheia.Utilities</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-102' />Aletheia.Version</div>
</td>



</tr></tbody>
</table>
</div>
</li><li class="enumerate_item">Compile and build the jar file:
<div class="standard"><a id='magicparlabel-107' />Navigate to the subproject folder <em>Aletheia.GUI</em> and execute the following ant command:</div>


<div class='float float-listings'><pre class ='listings'>$ ant -f build_runnable.xml</pre></div>


<div class="standard"><a id='magicparlabel-113' />It will generate the package file named <em>aletheiagui.jar</em> in the current directory</div>
</li></ol>
<h3 class="subsection"><a id='magicparlabel-114' /><span class="subsection_label">2.2</span> Obtain the precompiled package</h3>
<div class="standard"><a id='magicparlabel-115' />Alternatively, you can directly download the latest <a href="https://dl.dropboxusercontent.com/u/49511540/Aletheia/aletheiagui.jar">precompiled package</a>.</div>
<h3 class="subsection"><a id='magicparlabel-116' /><span class="subsection_label">2.3</span> Running the package</h3>
<div class="standard"><a id='magicparlabel-117' />Requirements:</div>

<ul class="itemize"><a id='magicparlabel-118' /><li class="itemize_item"><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java JRE version 7 or greater</a> (included in the JDK if you already downloaded it in <a href="#sub_Compile_the_sources">2.1</a>).</li>
</ul>
<div class="standard"><a id='magicparlabel-119' />Run the following command:</div>


<div class='float float-listings'><pre class ='listings'>$ java -jar aletheiagui.jar</pre></div>


<div class="standard"><a id='magicparlabel-125' />After a few instants with a splash image it should appear a window looking like this:
<br />

</div>

<div class="standard"><a id='magicparlabel-126' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-130' /><img src='0_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap000.png' alt='image: 0_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap000.png' />
</div>
</div>
<br />

</div>
<h2 class="section"><a id='magicparlabel-131' /><span class="section_label">3</span> Setting up the environment</h2>
<h3 class="subsection"><a id='magicparlabel-132' /><span class="subsection_label">3.1</span> The database directory</h3>
<div class="standard"><a id='magicparlabel-133' />The application data will persist in a embedded database on our local drive and first of all we need to set up its path. We will do it at the <em>Persistence folder </em>field on the <em>Configuration/Preferences</em> dialog:
<br />

</div>

<div class="standard"><a id='magicparlabel-134' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-138' /><img src='1_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap001.png' alt='image: 1_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap001.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-139' />If a proper database is not initialized in the specified folder a confirm dialog to create it will appear. </div>
<h3 class="subsection"><a id='magicparlabel-140' /><span class="subsection_label">3.2</span> The command line interface.</h3>
<div class="standard"><a id='magicparlabel-141' />After confirming the main window will change to:
<br />

</div>

<div class="standard"><a id='magicparlabel-142' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-146' /><img src='2_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap002.png' alt='image: 2_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap002.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-147' />As we can see, the main window is split in two areas by a movable divider. The lower part is a command line interface where we can input commands. To obtain a list of available commands grouped by topic, just use the command <em>help</em>:</div>


<div class='float float-listings'><pre class ='listings'>% help 

(Sub) commands:

	* /authority
		addda (&lt;UUID&gt; | &lt;nick&gt;) [&lt;statement&gt; [&lt;prefix&gt;]] : Creates a new delegate authorizer for the specified or active context.
		as (&lt;UUID&gt; | &lt;nick&gt;) [&lt;statement&gt;] : Adds a successor for the specified or active context.
		assr &lt;UUID&gt; &lt;statement&gt; : Adds a statement to an existing signature request.
(...)
</pre></div>

<h3 class="subsection"><a id='magicparlabel-162' /><span class="subsection_label">3.3</span> Importing initial data from the P2P network</h3>
<div class="standard"><a id='magicparlabel-163' />For executing the further steps of this tutorial we'll need a catalog of preexisting theorems already defined and proved in the system. We can obtain the in two ways:</div>

<ol class="enumerate"><a id='magicparlabel-164' /><li class="enumerate_item">Connecting to another installation where they reside via the P2P network (quite complicated, but useful in general).</li>
<li class="enumerate_item">Just importing them from a file (pretty simple, but useful only for this tutorial). To do so, just jump to <a href="#sub_Importing_data_from">3.3.5</a>.</li>
</ol>
<div class="standard"><a id='magicparlabel-166' />The catalog we will be working on named &ldquo;<em>ctx.quimtestar&rdquo;</em> is just one of the many possible that can be defined on the system and is aimed to formalize standard mathematics with classical logic and the ZFC axioms (Zermelo-Fraenkel set theory with the axiom of choice).</div>
<h4 class="subsubsection"><a id='magicparlabel-167' /><span class="subsubsection_label">3.3.1</span> Connecting to the network</h4>
<div class="standard"><a id='magicparlabel-168' />We can set up our P2P node in two distinct ways: as a &ldquo;<em>female&rdquo;</em> node or as a &ldquo;<em>male&rdquo;</em> node. The recommended way is being a &ldquo;<em>female&rdquo;</em> node, but in this case we'll need to keep a TCP port open to the Internet and be accepting connections from the outside, which is not always possible. As a &ldquo;<em>male&rdquo; </em>node, we will just connect to a single node that is willing to accept connections and all the communication with the network will be done through it.</div>
<h4 class="subsubsection"><a id='magicparlabel-169' /><span class="subsubsection_label">3.3.2</span> Setting up as a female node</h4>
<div class="standard"><a id='magicparlabel-170' />We set up the net interface's external IP address and the TCP listen port in the <em>Configuration/Preferences</em> dialog:
<br />

</div>

<div class="standard"><a id='magicparlabel-171' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-175' /><img src='3_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap004.png' alt='image: 3_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap004.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-176' />After that we need to specify an initial node (we might use <em>aletheia.project.li:9000</em>) via the command line interface:</div>


<div class='float float-listings'><pre class ='listings'>% help fnj 
fnj &lt;host&gt; &lt;port&gt;
Join the female P2P node the network by the given hook.

% fnj aletheia.project.li 9000
Joined to network
% connections 
aletheia.project.li/1.2.3.4:9000	MALE	Network</pre></div>

<h4 class="subsubsection"><a id='magicparlabel-189' /><span class="subsubsection_label">3.3.3</span> Setting up as a male node</h4>
<div class="standard"><a id='magicparlabel-190' />We set up directly the IP address and port of the node we are connecting to (we might use <em>aletheia.project.li:8900</em>) in the <em>Configuration/Preferences</em> dialog:
<br />

</div>

<div class="standard"><a id='magicparlabel-191' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-195' /><img src='4_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap005.png' alt='image: 4_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap005.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-196' />We might check the connection is done via the CLI command <em>connections</em>:</div>


<div class='float float-listings'><pre class ='listings'>% connections
aletheia.project.li/1.2.3.4:8900	MALE	Conjugal
aletheia.project.li/1.2.3.4:8900	MALE	Network</pre></div>

<h4 class="subsubsection"><a id='magicparlabel-204' /><span class="subsubsection_label">3.3.4</span> Obtaining and subscribing to contexts</h4>
<div class="standard"><a id='magicparlabel-205' />We obtain the initial root context executing the <em>orc</em> (obtain root context) command with a specific UUID that globally identifies the one we will use:</div>


<div class='float float-listings'><pre class ='listings'>% orc 57dff486-97eb-5733-aad5-a462018f4dde</pre></div>


<div class="standard"><a id='magicparlabel-211' />After a while a small tree like this should appear in the upper part of the window:
<br />

</div>

<div class="standard"><a id='magicparlabel-212' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-216' /><img src='5_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap006.png' alt='image: 5_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap006.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-217' />All the mathematical objects stored in the system (axioms, theorems, definitions, proof steps,...) are nodes in that tree. Except for the root context node, which we have just seen how to obtain it, we will be kept updated of the nodes we want to via a <em>subscription</em> mechanism. We might subscribe for the statements in the root contexts with the next command:</div>


<div class='float float-listings'><pre class ='listings'>% subscribe ctx.quimtestar statements</pre></div>


<div class="standard"><a id='magicparlabel-223' />A white flag indicator will appear left to the root node name and, after a while, their statement sub-nodes will be downloaded:
<br />

</div>

<div class="standard"><a id='magicparlabel-224' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-228' /><img src='6_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap007.png' alt='image: 6_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap007.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-229' />The (non-assumption) nodes with the same prefix get grouped under a grouping node which is labeled in blue with the prefix and with an arrow as indicator. The rest of its characteristics when collapsed are inherited from the actual node with that prefix as name (if exists). We can now expand nodes and navigate to some theorem statement under this context:
<br />

</div>

<div class="standard"><a id='magicparlabel-230' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-234' /><img src='7_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap008.png' alt='image: 7_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap008.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-235' />The statement &ldquo;<span style='font-family:monospace;'>Prop.And.th.symm&rdquo;</span> is a theorem that states that the logical conjunction is symmetric as a proposition (i.e. <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>P</mi><mo>,</mo><mi>Q</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo> &and; </mo><mi>Q</mi><mo> &rarr; </mo><mi>Q</mi><mo> &and; </mo><mi>P</mi>
  </mrow>
 </mrow></math>). This is might expressed in the Aletheia language with the expression term &ldquo;<span style='font-family:monospace;'>&lt;P:Prop -&gt; &lt;Q:Prop -&gt; &lt;_:Prop.And P Q -&gt; Prop.And Q P&gt;&gt;&gt;&rdquo;</span>, which we find at the node text after the colon mark (function parameter names aside). </div>

<div class="standard"><a id='magicparlabel-236' />The red question mark at the left indicates that we can't check the validity of this statement, in this case because we are lacking of the proof of this theorem (proofs are not downloaded by default). The proof of this theorem will take the form as a collection of nodes descending for this one. To obtain them them we need to <em>subscribe</em> for the proof of this statement. </div>

<div class="standard"><a id='magicparlabel-237' />To do that, first of all we set the <em>active context </em>to the parent context of this one, in this case the root context labeled as &ldquo;<span style='font-family:monospace;'>ctx.quimtestar&rdquo;</span>. Having selected the node &ldquo;<span style='font-family:monospace;'>Prop.And.th.symm&rdquo;</span> in the context tree we press the F3 key. When referring to a name in the command line, the <em>active context</em> is used to determine what particular statement we are referring to (different contexts might have statements with the same name).</div>

<div class="standard"><a id='magicparlabel-238' />The current <em>active context </em>is indicated in a panel just above the CLI panel, and we might change it any time we want:
<br />

</div>

<div class="standard"><a id='magicparlabel-239' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-243' /><img src='8_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap009.png' alt='image: 8_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap009.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-244' />Having set the <em>active context</em>, we execute the following command to subscribe for the statement's proof:</div>


<div class='float float-listings'><pre class ='listings'>% subscribe Prop.And.th.symm proof</pre></div>


<div class="standard"><a id='magicparlabel-250' />The proof subscription indicator is a black flag at the left of the node label. If we are still connected to the P2P network and there exists any network node that has this statement proved, we will in a moment obtain the proof of this statement, plus the proof of every theorem used in the proof of this statement to have the validity of this theorem assured:
<br />

</div>

<div class="standard"><a id='magicparlabel-251' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-255' /><img src='9_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap010.png' alt='image: 9_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap010.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-256' />The green check symbol indicates the validity of this statement, and therefore, we may consider this theorem proved from now on. So now we know that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>P</mi><mo>,</mo><mi>Q</mi><mspace width="10px" /><mi>P</mi><mo> &and; </mo><mi>Q</mi><mo> &rarr; </mo><mi>Q</mi><mo> &and; </mo><mi>P</mi>
  </mrow>
 </mrow></math>.</div>

<div class="standard"><a id='magicparlabel-257' />The axioms in the system are introduced as (nested) <em>context's assumptions</em>. For example, to be able to prove theorems of the classical logic, we somehow need an equivalent to the double negation elimination axiom and in this context it is introduced as an assumption of the context &ldquo;<span style='font-family:monospace;'>ctx.Prop.Not.double.inv</span>&rdquo;. All the theorems that make use in their proofs of the double negation elimination must be under that context. So, we must subscribe to the statements of this context the same way we did before:</div>


<div class='float float-listings'><pre class ='listings'>% subscribe ctx.Prop.Not.double.inv statements</pre></div>


<div class="standard"><a id='magicparlabel-263' />After a while we'll obtain the set of statements directly under that context:
<br />

</div>

<div class="standard"><a id='magicparlabel-264' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-268' /><img src='10_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap011.png' alt='image: 10_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap011.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-269' />So now we might subscribe successively to the statements of the full set of nested subcontexts, each under the previous one:</div>




<div class="standard"><a id='magicparlabel-270' /><table><tbody><tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-337' />Context</div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-340' />Description</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-343' /><span style='font-family:monospace;'>ctx.quimtestar</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-346' />Root context. Define the pure concept of &ldquo;<em>proposition&rdquo;</em>.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-349' /><span style='font-family:monospace;'>ctx.Prop.Not.double.inv</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-352' />Context for the classical logic. Axiom of double negation elimination.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-355' /><span style='font-family:monospace;'>ctx.one</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-358' />Introduces the <em>one</em> function that refers to the unique satisfying object of a given property. We'll use this to declare new mathematical objects that we can prove its existence and uniqueness.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-361' /><span style='font-family:monospace;'>ctx.Set</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-364' />Introduces the pure concept of &ldquo;<em>set&rdquo;</em> and the &ldquo;<em>set membership&rdquo;</em> (∈) relation.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-367' /><span style='font-family:monospace;'>ctx.Set.extensionality</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-370' />The axiom of extensionality from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-373' /><span style='font-family:monospace;'>ctx.Set.specification</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-376' />The axiom schema of specification from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-379' /><span style='font-family:monospace;'>ctx.Set.pairing</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-382' />The axiom of pairing from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-385' /><span style='font-family:monospace;'>ctx.Set.union</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-388' />The axiom of union from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-391' /><span style='font-family:monospace;'>ctx.Set.infinity</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-394' />The axiom of infinity from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-397' /><span style='font-family:monospace;'>ctx.Set.regularity</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-400' />The axiom of regularity from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-403' /><span style='font-family:monospace;'>ctx.Set.replacement</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-406' />The axiom schema of replacement from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-409' /><span style='font-family:monospace;'>ctx.Set.power</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-412' />The axiom of power set from the ZFC framework.</div>
</td>
</tr>
<tr><td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-415' /><span style='font-family:monospace;'>ctx.Set.choice</span></div>
</td>

<td align='left' valign='top'><div class="plain_layout"><a id='magicparlabel-418' />The axiom of choice from the ZFC framework.</div>
</td>
</tr></tbody>
</table>
</div>

<div class="standard"><a id='magicparlabel-419' />Done that we should have in our local database the statements (not the proofs) for a total of approximately 350 declarations and 3,500 theorems.</div>
<h4 class="subsubsection"><a id='magicparlabel-420' /><span class="subsubsection_label">3.3.5</span> Importing data from a file<a id="sub_Importing_data_from" />
</h4>
<div class="standard"><a id='magicparlabel-421' />If we couldn't perform the steps described in the previous subsections due to connectivity problems, we can alternatively download a <a href="https://dl.dropboxusercontent.com/u/49511540/Aletheia/tutorial.ale">data file</a> for this tutorial and import it with a command:</div>


<div class='float float-listings'><pre class ='listings'>% import [PATH]tutorial.ale</pre></div>

<h2 class="section"><a id='magicparlabel-427' /><span class="section_label">4</span> Proving theorems</h2>
<h3 class="subsection"><a id='magicparlabel-428' /><span class="subsection_label">4.1</span> Adding zero to the left of a natural number</h3>
<div class="standard"><a id='magicparlabel-429' />The next step in this tutorial is proving some stuff by ourselves. In this section we'll be dealing with the following quite trivial theorem <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mn>0</mn><mo>+</mo><mi>x</mi><mo>=</mo><mi>x</mi>
  </mrow>
 </mrow></math>. </div>
<h4 class="subsubsection"><a id='magicparlabel-430' /><span class="subsubsection_label">4.1.1</span> Defining the context statement</h4>
<div class="standard"><a id='magicparlabel-431' />As said, any theorem in our system will be represented as a statement within a context. In this case, that context will be &ldquo;<span style='font-family:monospace;'>ctx.Set.regularity&rdquo;</span> since the axioms accessible from there are needed to prove its validity. So, first of all, we set the <em>active context</em> to it navigating to it and pressing the <em>F3</em> key or executing the following command:</div>


<div class='float float-listings'><pre class ='listings'>% sel /ctx.quimtestar/ctx.Prop.Not.double.inv/ctx.one/ctx.Set/ctx.Set.extensionality/ctx.Set.specification/ctx.Set.pairing/ctx.Set.union/ctx.Set.infinity/ctx.Set.regularity</pre></div>


<div class="standard"><a id='magicparlabel-437' />Next, we'll create the new statement with the following command:</div>


<div class='float float-listings'><pre class ='listings'>% new tutorial.th ctx "&lt;x:Set -&gt; &lt;_:Natural x -&gt; Set.Equal (Natural.sum Natural.zero x) x&gt;&gt;"</pre></div>


<div class="standard"><a id='magicparlabel-443' />The &ldquo;<span style='font-family:monospace;'>new&rdquo;</span> command is used to create new statements, &ldquo;<span style='font-family:monospace;'>tutorial.th&rdquo;</span> is the arbitrary name we'll use for this statement, &ldquo;<span style='font-family:monospace;'>ctx&rdquo;</span> indicates we want to create a statement of the type <em>context</em>. Finally, we specify a <em>term expression</em> that specifies this theorem thesis between quote marks.</div>

<div class="standard"><a id='magicparlabel-444' />In our environment, every natural number is an object of the type &ldquo;<span style='font-family:monospace;'>Set&rdquo;</span> that satisfies the proposition &ldquo;<span style='font-family:monospace;'>Natural&rdquo;</span>, so this theorem might be seen as a function that takes a &ldquo;<span style='font-family:monospace;'>Set&rdquo;</span> object that satisfies the &ldquo;<span style='font-family:monospace;'>Natural&rdquo;</span> proposition and returns the theorem's equality as a proposition.
<br />

</div>

<div class="standard"><a id='magicparlabel-445' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-449' /><img src='11_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap012.png' alt='image: 11_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap012.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-450' />Under our new context we automatically get some assumption nodes corresponding to the function parameters of the context term (with types &ldquo;<span style='font-family:monospace;'>Set&rdquo;</span> and &ldquo;<span style='font-family:monospace;'>Natural x&rdquo;</span>), and a consequent node containing the body term of that function (&ldquo;<span style='font-family:monospace;'>Set.Equal (Natural.sum Natural.zero x) x&rdquo;</span>). To get context marked as valid, and so this theorem proved, our target is to infer a valid statement that has exactly that term as a type.</div>
<h4 class="subsubsection"><a id='magicparlabel-451' /><span class="subsubsection_label">4.1.2</span> Naming the assumptions</h4>
<div class="standard"><a id='magicparlabel-452' />First of all, we should set the &ldquo;<span style='font-family:monospace;'>[Assumption: 1]&rdquo;</span><em> </em>statement's name so we can refer to it form the command line. We can do it just selecting it in the context tree and pressing F2 or with the command:</div>


<div class='float float-listings'><pre class ='listings'>% idas [name] 1</pre></div>


<div class="standard"><a id='magicparlabel-458' />In this catalog it has been adopted the practice of naming the proof steps statements in proofs simply as &ldquo;<span style='font-family:monospace;'>s###&rdquo;</span>, being <span style='font-family:monospace;'>###</span><em> </em>a three-digit consecutive number sequence for every theorem. So in this case the name would be &ldquo;<span style='font-family:monospace;'>s000&rdquo;</span>.</div>

<div class="standard"><a id='magicparlabel-459' />This assumption statement is marked as not valid because it depends on the validity of the statement &ldquo;<span style='font-family:monospace;'>Natural&rdquo;</span> (as we can notice since it is displayed yellow, and not green, at its occurrence on the type term -right to the colon mark- of this statement; this won't happen if we imported the tutorial data from a file). To download the proof that makes it valid, we just subscribe for its proof:</div>


<div class='float float-listings'><pre class ='listings'>% subscribe Natural proof</pre></div>


<div class="standard"><a id='magicparlabel-465' />If we are still connected to the P2P network it should just turn to valid after a while.
<br />

</div>

<div class="standard"><a id='magicparlabel-466' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-470' /><img src='12_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap013.png' alt='image: 12_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap013.png' />
</div>
</div>
<br />

</div>
<h4 class="subsubsection"><a id='magicparlabel-471' /><span class="subsubsection_label">4.1.3</span> First proof approach</h4>
<div class="standard"><a id='magicparlabel-472' />Navigating through the catalog of theorems we can easily find one labeled as &ldquo;<span style='font-family:monospace;'>Natural.sum.th.zero.lft&rdquo;</span> that exactly fits this theorem, so in this first approach we will be just using it in a trivial proof. That statement corresponds to the term<span style='font-family:monospace;'> "&lt;@0:Set -&gt; &lt;@1:Natural @0 -&gt; Set.Equal (Natural.sum Natural.zero @0) @0&gt;&gt;"</span> and we already have in our context a statement &ldquo;<span style='font-family:monospace;'>x&rdquo;</span> of type &ldquo;<span style='font-family:monospace;'>Set&rdquo;</span> and a statement &ldquo;<span style='font-family:monospace;'>s000&rdquo;</span><em> </em>of type &ldquo;<span style='font-family:monospace;'>Natural x&rdquo;</span><em> </em>to reach a consequent of type &ldquo;<span style='font-family:monospace;'>Set.Equal (Natural.sum Natural.zero x) x&rdquo;</span>. We can infer a new statement passing any term whose type matches with the function's parameter type to another statement. That is called a &ldquo;<em>specialization statement&rdquo;</em>. So we will specialize the &ldquo;<span style='font-family:monospace;'>Natural.sum.th.zero.lft&rdquo;</span> statement with this two assumptions. We do it with the following command:</div>


<div class='float float-listings'><pre class ='listings'>% new s001 spc Natural.sum.th.zero.lft x</pre></div>


<div class="standard"><a id='magicparlabel-478' />We have just created a new &ldquo;<span style='font-family:monospace;'>s001&rdquo;</span> statement that is a specialization of the &ldquo;<span style='font-family:monospace;'>Natural.sum.th.zero.lft&rdquo;</span> theorem with parameter &ldquo;<span style='font-family:monospace;'>x&rdquo;</span>:
<br />

</div>

<div class="standard"><a id='magicparlabel-479' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-483' /><img src='13_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap014.png' alt='image: 13_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap014.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-484' />Since this statement's validity depends on the specialized statement's and in this moment it's still not valid because we have not got its proof, now we should subscribe for its proof to make this new statement valid:</div>


<div class='float float-listings'><pre class ='listings'>% subscribe Natural.sum.th.zero.lft proof</pre></div>


<div class="standard"><a id='magicparlabel-490' />To make this theorem valid, and since we just started our database from scratch, it will be downloaded and validated not only its proof but the proofs of all the theorems on which it depends to the very axioms. That can take a while, but we can just carry on with out proving work while the system does all this job. The only consequence is that we just won't be seeing this statement as valid (and consequently be sure that the proof we are building is valid) until all that is done.</div>

<div class="standard"><a id='magicparlabel-491' />Now we have just to specialize statement &ldquo;<span style='font-family:monospace;'>s001&rdquo;</span> with &ldquo;<span style='font-family:monospace;'>s000&rdquo;</span> and we are done:</div>


<div class='float float-listings'><pre class ='listings'>% new s002 spc s001 s000</pre></div>


<div class="standard"><a id='magicparlabel-497' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-501' /><img src='14_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap015.png' alt='image: 14_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap015.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-502' />Note that the consequent has been satisfied with this statement and our new theorem has been marked as proved. The list of statements (valid or not) that satisfy a consequent are displayed between brackets next to it.</div>

<div class="standard"><a id='magicparlabel-503' />Now we have a new proved theorem in our catalog and we can use in any proof in a context descending to this one. Of course, it doesn't make much sense to prove something using the very same theorem that has been proved before. </div>

<div class="standard"><a id='magicparlabel-504' />We can delete a statement by selecting its node in the context tree and hitting the &ldquo;<em>delete&rdquo;</em> key. If other statements depend on it, we'll need to use the &ldquo;<em>shift&rdquo;</em> key to delete them in a &ldquo;cascade&rdquo; fashion (use with care). Doing this with the statements we have just input, of course, will &ldquo;unprove&rdquo; our theorem (and all theorems whose proof are depending on it).</div>

<div class="standard"><a id='magicparlabel-505' />To prove it again, we can alternatively do both specializations in a row in the same statement:</div>


<div class='float float-listings'><pre class ='listings'>% new s001 spc Natural.sum.th.zero.lft x s000</pre></div>


<div class="standard"><a id='magicparlabel-511' />Both specialization statements are created and named using the specified label as a prefix:
<br />

</div>

<div class="standard"><a id='magicparlabel-512' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-516' /><img src='15_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap016.png' alt='image: 15_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap016.png' />
</div>
</div>
<br />

</div>
<h4 class="subsubsection"><a id='magicparlabel-517' /><span class="subsubsection_label">4.1.4</span> Second proof approach</h4>
<div class="standard"><a id='magicparlabel-518' />We'll now try to prove the same theorem combining other theorems, which is the way usual proofs are. Navigating through the catalog, we can find find the theorem &ldquo;<span style='font-family:monospace;'>Natural.sum.def.zero&rdquo;</span> which states that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>x</mi><mo>+</mo><mn>0</mn><mo>=</mo><mi>x</mi>
  </mrow>
 </mrow></math> and then &ldquo;<span style='font-family:monospace;'>Natural.sum.th.comm&rdquo; </span>which is the commutative property of the sum operation of naturals: <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mi> &forall; </mi><mi>y</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>y</mi><mo>+</mo><mi>x</mi>
  </mrow>
 </mrow></math>. Additionally we'll need the transitive property of the equality relation to &ldquo;glue&rdquo; one part to the other, that is the &ldquo;<span style='font-family:monospace;'>Set.Equal.th.trans&rdquo;</span> theorem which states that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mi> &forall; </mi><mi>y</mi><mi> &forall; </mi><mi>z</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>x</mi><mo>=</mo><mi>y</mi><mo> &and; </mo><mi>y</mi><mo>=</mo><mi>z</mi><mo> &rarr; </mo><mi>x</mi><mo>=</mo><mi>z</mi>
  </mrow>
 </mrow></math>.</div>

<div class="standard"><a id='magicparlabel-519' />So, we enter the steps of this proof as follows and we are done:</div>


<div class='float float-listings'><pre class ='listings'>% new s001 spc Natural.sum.th.comm Natural.zero Natural.zero.th.Natural x s000
% new s002 spc Natural.sum.def.zero x 
% new s003 spc Set.Equal.th.trans "Natural.sum Natural.zero x" "Natural.sum x Natural.zero" x s001 s002 </pre></div>


<div class="standard"><a id='magicparlabel-527' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-531' /><img src='16_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap017.png' alt='image: 16_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap017.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-532' />Unfortunately, the proof on &ldquo;<span style='font-family:monospace;'>Natural.sum.th.comm&rdquo;</span> depends on &ldquo;<span style='font-family:monospace;'>Natural.sum.th.zero.lft&rdquo;</span>, so we really haven't done anything much different than before. If we were proving that theorem from scratch, the proof would need to be different than this.</div>
<h4 class="subsubsection"><a id='magicparlabel-533' /><span class="subsubsection_label">4.1.5</span> Third and definitive proof approach</h4>
<div class="standard"><a id='magicparlabel-534' />The actual proof of this theorem uses the mathematical induction principle, which we have in our system just as another theorem. The theorem &ldquo;<span style='font-family:monospace;'>Natural.th.induction&rdquo;</span> applies to any proposition on naturals and states that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>P</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mn>0</mn><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo> &and; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
   <mrow><mi> &forall; </mi><mi>n</mi><mo> &isin; </mo>
    <mstyle mathvariant='bold'><mi>N</mi>
    </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>n</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo> &rarr; </mo><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
    <mrow><mi>n</mi><mo>+</mo><mn>1</mn>
    </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo><mo> &rarr; </mo><mi> &forall; </mi><mi>n</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>n</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math>, so we just apply it to the generalized term we are willing to prove &ldquo;<span style='font-family:monospace;'>&lt;x:Set -&gt; Set.Equal (Natural.sum Natural.zero x) x&gt;&rdquo;:</span></div>


<div class='float float-listings'><pre class ='listings'>% new s001 spc Natural.th.induction "&lt;x:Set -&gt; Set.Equal (Natural.sum Natural.zero x) x&gt;"</pre></div>


<div class="standard"><a id='magicparlabel-540' />The resulting statement is a function that its antecedents are respectively the <em>basis step</em> and the <em>inductive step</em> of the induction. We may now create them as context statements just as they were theorems in this level and leave their proof for later:</div>


<div class='float float-listings'><pre class ='listings'>% new s002 ctx "Set.Equal (Natural.sum Natural.zero Natural.zero) Natural.zero"
% up
% new s003 spc s001 s002 
% new s004 ctx "&lt;x:Set -&gt; &lt;_:Natural x -&gt; &lt;_:Set.Equal (Natural.sum Natural.zero x) x -&gt; Set.Equal (Natural.sum Natural.zero (Natural.succ x)) (Natural.succ x)&gt;&gt;&gt;"
% up
% new s005 spc s003 s004</pre></div>


<div class="standard"><a id='magicparlabel-551' />(When creating a new context that is not immediately proved the active context is automatically set to that new context, so we need to set one level up with the &ldquo;<em>up&rdquo;</em> command).</div>

<div class="standard"><a id='magicparlabel-552' />Alternatively, we can automatically execute this sequence with a single command as this:</div>


<div class='float float-listings'><pre class ='listings'>% new s002 strip s001</pre></div>


<div class="standard"><a id='magicparlabel-558' />After that, we apply the resulting statement to &ldquo;<span style='font-family:monospace;'>x&rdquo;</span>.</div>


<div class='float float-listings'><pre class ='listings'>% new s003 spc s002 x s000 </pre></div>


<div class="standard"><a id='magicparlabel-564' />At this step we reached the context's consequent but we won't get it marked as valid until we prove both contexts we left before:
<br />

</div>

<div class="standard"><a id='magicparlabel-565' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-569' /><img src='17_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap018.png' alt='image: 17_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap018.png' />
</div>
</div>
<br />

</div>

<div class="standard"><a id='magicparlabel-570' />So now we set the <em>active context</em> to the context &ldquo;<span style='font-family:monospace;'>s002.sub_00&rdquo; </span>which just states that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mn>0</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn>
  </mrow>
 </mrow></math> and prove it:</div>


<div class='float float-listings'><pre class ='listings'>% new s004 spc Natural.sum.def.zero Natural.zero</pre></div>


<div class="standard"><a id='magicparlabel-576' />Proving the induction step &ldquo;<span style='font-family:monospace;'>s002.sub_02&rdquo;</span> is a bit more tricky:</div>


<div class='float float-listings'><pre class ='listings'>% idas x 0
% idas s005 1 
% idas s006 2
% new s007 spc Natural.sum.def.succ Natural.zero x s005 
% new s008 spc Set.Equal.th.trans "Natural.sum Natural.zero (Natural.succ x)" "Natural.succ (Natural.sum Natural.zero x)" "Natural.succ x" s007 
% new s009 strip s008
% new s010 spc Set.th.function Natural.succ "Natural.sum Natural.zero x" x s006 </pre></div>


<div class="standard"><a id='magicparlabel-588' />We used the &ldquo;<span style='font-family:monospace;'>Natural.sum.def.succ&rdquo; </span>that defines the sum operation to satisfy the property <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>n</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'>
    <mrow><mi>N</mi><mspace width="6px" />
    </mrow>
   </mstyle><mi> &forall; </mi><mi>m</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'>
    <mrow><mi>N</mi><mspace width="6px" />
    </mrow>
   </mstyle><mo>:</mo><mspace width="6px" /><mi>n</mi><mo>+</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi>m</mi><mo>+</mo><mn>1</mn>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>=</mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi>n</mi><mo>+</mo><mi>m</mi>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>+</mo><mn>1</mn>
  </mrow>
 </mrow></math>, the transitive property of equality as before, and then the fact that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>f</mi><mspace width="6px" /><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mi> &forall; </mi><mi>y</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>x</mi><mo>=</mo><mi>y</mi><mo> &rarr; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>y</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> which is just another theorem in the catalog named &ldquo;<span style='font-family:monospace;'>Set.th.function&rdquo;</span>.
<br />

</div>

<div class="standard"><a id='magicparlabel-589' /><div class='Frameless'><div class="plain_layout"><a id='magicparlabel-593' /><img src='18_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap019.png' alt='image: 18_mnt_vlb0_quim_Aletheia_git_Aletheia_Aletheia_Documentation_images_cap019.png' />
</div>
</div>
<br />

</div>
<h3 class="subsection"><a id='magicparlabel-594' /><span class="subsection_label">4.2</span> Epsilon-induction</h3>
<div class="standard"><a id='magicparlabel-595' /><a href="https://www.youtube.com/watch?v=XXU7GxIRLHI&amp;index=1&amp;list=PLYFNMXa8kbndNcC8WUvA5tlvPNshH9Z6P">This video on youtube</a> shows the development of the proof of <a href="https://en.wikipedia.org/wiki/Epsilon-induction">the epsilon-induction principle</a> in set theory. That is, <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>P</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
   <mrow><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
    <mrow><mi> &forall; </mi><mi>y</mi><mo> &isin; </mo><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>y</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
    </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo> &rarr; </mo><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo><mo> &rarr; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
   <mrow><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo>
  </mrow>
 </mrow></math>. The sketch of this proof is as follows:</div>

<div class="proof"><a id='magicparlabel-596' /><div class="proof_item"><span class="proof_label">Proof.</span>
We assume that for a particular property of sets <em>P</em> the hypothesis <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi> &forall; </mi><mi>y</mi><mo> &isin; </mo><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>y</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo> &rarr; </mo><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> occurs (&ldquo;<span style='font-family:monospace;'>s000&rdquo;</span>). First of all we state and proof the reciprocal of that assumption <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo> &rarr; </mo><mi> &exist; </mi><mi>y</mi><mo> &isin; </mo><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>y</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s001&rdquo;</span>). Our goal is to show that for any particular set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow><mi>x</mi>
 </mrow></math>, it is the case that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math>.</div>
<div class="proof_item">Next we will proceed in a <em>reductio ad absurdum</em> manner. So we will be taking the negation of the consequent <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>x</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> as another assumption (&ldquo;<span style='font-family:monospace;'>s022&rdquo;</span>) and work towards reaching a contradiction.</div>
<div class="proof_item">To achieve that, we define recursively a function <em>f</em> from the set of natural numbers to the class of sets as follows:
<br />

</div>
<div class="proof_item">
<div class='Frameless'><ul class="itemize"><a id='magicparlabel-603' /><li class="itemize_item"><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mn>0</mn><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>=</mo>{<mi>x</mi>}
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>f.def.zero&rdquo;</span>).</li>
<li class="itemize_item"><math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>n</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi>n</mi><mo>+</mo><mn>1</mn>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>=</mo>{<mi>y</mi><mo> &isin; </mo><mo> &cup; </mo><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>n</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>y</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>}
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>f.def.succ&rdquo;</span>).</li>
</ul>
</div>
<br />


<br />

</div>
<div class="proof_item">The base case is defined through the <em>axiom of pairing</em> (in the particular case of a pair of identical elements, a <em>singleton</em>). For the general case we need the <em>axiom of union</em> and the <em>axiom schema of separation</em>. </div>
<div class="proof_item">It is easy to proof that the function <em>f</em> will fulfill that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>n</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &forall; </mi><mi>z</mi><mo> &isin; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>n</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>z</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>f.th.Not_P&rdquo;</span>). In the video it is used the <a href="https://en.wikipedia.org/wiki/Mathematical_induction">principle of mathematical induction</a> for natural numbers (&ldquo;<span style='font-family:monospace;'>s027&rdquo;</span>) although in reality it would not be necessary; we would only need the fact that a natural number is either zero or the successor of another natural number (which is proved by induction anyway).</div>
<div class="proof_item">There is a theorem in the catalog which is a direct consequence of the axiom of regularity that states that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &forall; </mi><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mo form='prefix' fence='true' stretchy='true' symmetric='true'>[</mo>
   <mrow><mi> &forall; </mi><mi>y</mi><mo> &isin; </mo><mi>x</mi><mspace width="6px" /><mo>:</mo><mspace width="6px" /><mi> &exist; </mi><mi>z</mi><mo> &isin; </mo><mi>y</mi><mo> &cap; </mo><mi>x</mi>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>]</mo><mo> &rarr; </mo><mi>x</mi><mo>=</mo>
   <mstyle mathvariant='normal'><mi>Ø</mi>
   </mstyle>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>Set.th.In.acyclic&rdquo;</span>). We'll feed that theorem with the set <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &cup; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (defined using the <em>axiom of schema replacement</em>) (&ldquo;<span style='font-family:monospace;'>s045&rdquo;</span>). The antecedent of that theorem (&ldquo;<span style='font-family:monospace;'>s046.sub_00&rdquo;</span>) is proven through the fact that any element <em>z</em> of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &cup; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> is an element of <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>n</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> for some <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>n</mi><mo> &isin; </mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle>
  </mrow>
 </mrow></math>, which by &ldquo;<span style='font-family:monospace;'>f.th.Not_P&rdquo;</span> implies that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>z</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s068&rdquo;</span>). That fact in turn implies by &ldquo;<span style='font-family:monospace;'>s001&rdquo;</span> that exists an element <em>w</em> of <em>z</em> for which <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi> &not; </mi><mi>P</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mi>w</mi><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s076&rdquo;</span>). By definition, this means that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>w</mi><mo> &isin; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mrow><mi>n</mi><mo>+</mo><mn>1</mn>
   </mrow><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s090&rdquo;</span>), and therefore also to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &cup; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s099&rdquo;</span>).</div>
<div class="proof_item">So, to this point we have concluded that <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mo> &cup; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo><mo>=</mo>
   <mstyle mathvariant='normal'><mi>Ø</mi>
   </mstyle>
  </mrow>
 </mrow></math>. But this contradicts the definition for the base case of <em>f</em>, since <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo>{<mi>x</mi>}<mo>=</mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo><mn>0</mn><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> which leads to <math xmlns="http://www.w3.org/1998/Math/MathML">
 <mrow>
  <mrow><mi>x</mi><mo> &isin; </mo><mo> &cup; </mo><mi>f</mi><mo form='prefix' fence='true' stretchy='true' symmetric='true'>(</mo>
   <mstyle mathvariant='bold'><mi>N</mi>
   </mstyle><mo form='postfix' fence='true' stretchy='true' symmetric='true'>)</mo>
  </mrow>
 </mrow></math> (&ldquo;<span style='font-family:monospace;'>s103&rdquo;</span>).</div>
</div>
</body>
</html>
